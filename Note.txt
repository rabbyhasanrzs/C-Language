
File IO:
---------
    -->> FILE- container in a storage device to store data.
         - RAM is a volatile memory.
         - Contents are lost when program terminate.
         - Files are used to persist the data.


    -->> Operation on FILES:
         - Create a File.
         - Open a File.
         - Close a File.
         - Read from a File.
         - Write in a File.z 

    -->> Types of Files :
         -Text Files : textual data (.txt , .c)
         -Binary Files : binary data (.exe , .mp3 , .jpg)

-->> How Can we Access a file ...??? : 

    -->> File Pointer : File is a hidden structure that needs to 
         be create for opening a file .(win,linux,mac OS will different file structure)
         -- A FILE ptr that pints to this structure & is used to 
            access the files.
         -- FILE *fptr ;

    -->> opening a FILE 
         -- fptr = fopen("filename",mode{read ,write});
    -->> Closing a FILE
         -- fclose(fptr);


    --> File Opening Modes : 
         -- "r" - open to read.
         -- "rb" - open to read in binary.
         -- "w" - open to write.
         -- "wb" - open to write in binary.
         -- "a" - open t append

    ### Best practice : Check if a file exist 
        before reading from it.


    -->> Reading from a File :
         -- char ch;
            fscanf(fptr,"%c",&ch);
    -->> Writing to a file:
        -- char ch = 'A';
           fprint(fptr,"%c",ch); 
    -->> Read & Write a character
        -- fgetc(fptr);
        -- fputc('A',fptr);
        
    -->> EOF (End of File)
        -- fgetc returns EOF to show that the 
            file has ended